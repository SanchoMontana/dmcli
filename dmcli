#!/usr/bin/env bash

SCRIPTDIR=`dirname $0`

# Create a local venv and install packages there (if not present)
if ! [[ -d venv ]]; then
    echo "Local Python3 virtual environment not found"

    # Find the system installed python3
    echo "  - Finding Python 3 system install"
    for py in python3 python3.5 python35 python; do
        if [ "`which ${py}`" ]; then
        PYTHON="${py}"
        break
        fi
    done
 
    # Verify the python found is a new enough version 
    echo "  - Verifying Python 3 version"
    if ! [ "$PYTHON" ]; then
        echo "Could not find a suitable python to try"
        exit 1
    else
        if ! [ "`$PYTHON -c 'import sys; print(True if sys.version_info > (3,5,0) else "")'`" ]; then
            echo "Requires python >= 3.5.0"
            exit 1
        fi
    fi

    # Create a new virtual environment
    pushd ${SCRIPTDIR} > /dev/null
    echo "  - Create virtual environment"
    ${PYTHON} -m venv venv

    # Verify the venv was created
    if ! [[ -e  ${SCRIPTDIR}/venv/bin/activate ]]; then
        echo "Failed to create Python3 virtual environment"
        echo "Please ensure the 'python3-venv' package has been installed from the Debian apt repo."
        exit 1
    fi

    # Update the base venv and install required packages
    source ${SCRIPTDIR}/venv/bin/activate
    echo " - Updating pip/setuptools"
    pip3 install --upgrade pip
    echo "  - Installing packaged from requirements.txt"
    pip3 install -r requirements.txt
    deactivate
    popd > /dev/null
    PYTHON=
fi

# Add the lib folder to the PYTHONPATH
export PYTHONPATH=${SCRIPTDIR}:${SCRIPTDIR}/lib:${PYTHONPATH}
# inside lib/ should be a dmcli/__main__.py
# User the venv to run the "dmcli" module
source ${SCRIPTDIR}/venv/bin/activate
python3 -m dmcli $(pwd)
deactivate
